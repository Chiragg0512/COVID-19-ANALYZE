<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='covid19dashboard_17303160954680' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.0k5owgq0ajrytj15uecju0mysdov' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.0wcyjl10rqkjba1fwof6j1rv3anj'>
            <connection class='textscan' directory='C:/Users/chira/OneDrive/Desktop/DATA ANALYICS PROJECT WSCUBE/COVID 19 PROJECT 3' filename='worldometer_coronavirus_summary_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0wcyjl10rqkjba1fwof6j1rv3anj' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_or_critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[serious_or_critical]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>serious_or_critical</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths_per_1m_population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per 1M Population' datatype='real' name='[total_tests_per_1m_population]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/chira/AppData/Local/Temp/TableauTemp/#TableauTemp_1wnofkf0me7j6719rm5xs0jds5b1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/30/2024 06:56:54 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_confirmed</remote-alias>
              <ordinal>2</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_recovered</remote-alias>
              <ordinal>4</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>active_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[active_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>active_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>serious_or_critical</remote-name>
              <remote-type>5</remote-type>
              <local-name>[serious_or_critical]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>serious_or_critical</remote-alias>
              <ordinal>6</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_1m_population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_1m_population</remote-alias>
              <ordinal>7</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_1m_population</remote-alias>
              <ordinal>8</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>9</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_1m_population</remote-alias>
              <ordinal>10</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>11</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_051E55070519405E80D095BFD065DD87'>
            <properties context=''>
              <relation connection='textscan.0wcyjl10rqkjba1fwof6j1rv3anj' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='total_recovered' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='serious_or_critical' ordinal='6' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
                  <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
                  <column datatype='real' name='total_tests' ordinal='9' />
                  <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='population' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CONFIRMED VS DEATHS'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CONFIRMED VS DEATHS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([active_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]</rows>
        <cols>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</cols>
      </table>
      <simple-id uuid='{E8E76655-F412-419C-B79B-676DCEAE6E59}' />
    </worksheet>
    <worksheet name='GLOBAL CASES'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GLOBAL CASES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
              <text column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0k5owgq0ajrytj15uecju0mysdov].[Latitude (generated)]</rows>
        <cols>[federated.0k5owgq0ajrytj15uecju0mysdov].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9A84F162-7C9D-459F-8F6E-D5E91592FCA6}' />
    </worksheet>
    <worksheet name='SERIOUS OR CRITICAL'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SERIOUS OR CRITICAL</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
            <column-instance column='[serious_or_critical]' derivation='Sum' name='[sum:serious_or_critical:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([serious_or_critical])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
              <wedge-size column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:serious_or_critical:qk]' />
              <size column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:serious_or_critical:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C910497-4078-4E0E-98A9-DABC70AF8FCF}' />
    </worksheet>
    <worksheet name='TOP 10 DEATH CASES'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOP 10 DEATH CASES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' />
              <color column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' />
              <text column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
              <text column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CA3D64F3-CAEC-4D24-BBF8-B9894CE0766F}' />
    </worksheet>
    <worksheet name='TOP 10 RECOVERIES'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOP 10 RECOVERIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
              <size column='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_recovered:qk]' />
              <text column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C0DF0D34-C5D5-4021-8682-E9F46B9F8113}' />
    </worksheet>
    <worksheet name='Top 10 confirmed'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 confirmed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0k5owgq0ajrytj15uecju0mysdov' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5owgq0ajrytj15uecju0mysdov'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</rows>
        <cols>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DDA0DB22-1665-43E9-83AE-6B62CCF026EC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96734' id='12' param='horz' type-v2='layout-flow' w='98580' x='710' y='1633'>
            <zone h='96734' id='9' param='horz' type-v2='layout-flow' w='84370' x='710' y='1633'>
              <zone h='96734' id='7' type-v2='layout-basic' w='84370' x='710' y='1633'>
                <zone h='48367' id='3' name='Top 10 confirmed' w='42185' x='42895' y='1633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48367' id='5' name='GLOBAL CASES' w='42185' x='710' y='1633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48367' id='10' name='TOP 10 RECOVERIES' w='21093' x='710' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48367' id='14' name='CONFIRMED VS DEATHS' w='21092' x='21803' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48367' id='15' name='SERIOUS OR CRITICAL' w='21093' x='42895' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48367' id='17' name='TOP 10 DEATH CASES' w='21092' x='63988' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='96734' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='14210' x='85080' y='1633'>
              <zone h='46123' id='13' name='TOP 10 RECOVERIES' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' type-v2='color' w='14210' x='85080' y='1633'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9388' id='16' name='SERIOUS OR CRITICAL' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:serious_or_critical:qk]' type-v2='size' w='14210' x='85080' y='47756'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13266' id='18' name='TOP 10 DEATH CASES' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' type-v2='color' w='14210' x='85080' y='57144'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='96734' id='21' param='vert' type-v2='layout-flow' w='98580' x='710' y='1633'>
                <zone fixed-size='280' h='48367' id='5' is-fixed='true' name='GLOBAL CASES' w='42185' x='710' y='1633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48367' id='3' is-fixed='true' name='Top 10 confirmed' w='42185' x='42895' y='1633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48367' id='10' is-fixed='true' name='TOP 10 RECOVERIES' w='21093' x='710' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46123' id='13' name='TOP 10 RECOVERIES' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' type-v2='color' w='14210' x='85080' y='1633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48367' id='14' is-fixed='true' name='CONFIRMED VS DEATHS' w='21092' x='21803' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48367' id='15' is-fixed='true' name='SERIOUS OR CRITICAL' w='21093' x='42895' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9388' id='16' name='SERIOUS OR CRITICAL' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:serious_or_critical:qk]' type-v2='size' w='14210' x='85080' y='47756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48367' id='17' is-fixed='true' name='TOP 10 DEATH CASES' w='21092' x='63988' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13266' id='18' name='TOP 10 DEATH CASES' pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' type-v2='color' w='14210' x='85080' y='57144'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CCDAFF88-9057-49B3-8671-4BD1CD66ED7C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 confirmed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Turkey&quot;</value>
                <value>15053168</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>17057873</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Korea&quot;</value>
                <value>17782061</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>18260293</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;UK&quot;</value>
                <value>22159805</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Germany&quot;</value>
                <value>25780226</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>29160802</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>30682094</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>43121599</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
                  <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;USA&quot;</value>
                <value>84209473</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B416B9C-FD51-4549-A776-4EEEE219CE0C}' />
    </window>
    <window class='worksheet' name='GLOBAL CASES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{912FBF98-FE40-4D1F-B106-15627E5E3631}' />
    </window>
    <window class='worksheet' name='TOP 10 DEATH CASES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCA74387-15C1-491C-A248-5BFDBAB82DA0}' />
    </window>
    <window class='worksheet' name='TOP 10 RECOVERIES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E7EAFBA-FAEA-4D0E-A46D-1971E741D1EF}' />
    </window>
    <window class='worksheet' name='CONFIRMED VS DEATHS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0D29782-89DD-48B4-9B09-EE66571B7578}' />
    </window>
    <window class='worksheet' name='SERIOUS OR CRITICAL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0k5owgq0ajrytj15uecju0mysdov].[sum:serious_or_critical:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE85287C-157E-4F5C-A60F-7CA62199C577}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CONFIRMED VS DEATHS'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GLOBAL CASES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SERIOUS OR CRITICAL' />
        <viewpoint name='TOP 10 DEATH CASES' />
        <viewpoint name='TOP 10 RECOVERIES'>
          <highlight>
            <color-one-way>
              <field>[federated.0k5owgq0ajrytj15uecju0mysdov].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 confirmed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{2A5E06CF-A869-4B75-BB82-EB19F0826838}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CONFIRMED VS DEATHS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Ca+sfSJlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GLOBAL CASES' width='192'>
      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
      mOso9P8PSllMWqTmudMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='SERIOUS OR CRITICAL' width='164'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TOP 10 DEATH CASES' width='192'>
      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
      /wOGCR05qJ9tPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='TOP 10 RECOVERIES' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 confirmed' width='192'>
      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
      +3+LQykHwkpJ7AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
